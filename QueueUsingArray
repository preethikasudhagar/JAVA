Using FRONT and REAR

class QueueusingArray{
    int[] queue;
    int size;
    int front,rear;
    QueueusingArray(int size){
        this.size=size;
        queue=new int[size];
        front=-1;
        rear=-1;
    }
    public void enqueue(int val){
     //  System.out.println("\nAfter insertion");
       if(rear==size-1){
        System.out.println("Queue Overflow");
        return;
        }
        if(rear==-1){
            front=0;
            }
        queue[++rear]=val;
       // display();
        
    }
    public void dequeue(){
        if(front==-1 ||front>rear ){
             System.out.println("Queue Underflow");
            return ;
        }
        
        System.out.println("\nDequed Element "+queue[front++]);
    }
    public void display(){
        if(front==-1||front>rear){
            System.out.println("Queue Empty");
            return;
        }
        for(int i=front;i<=rear;i++)
        System.out.print(queue[i]+" ");
    }
    
    
}
public class Main
{
	public static void main(String[] args) {
		QueueusingArray q1=new QueueusingArray(5);
		q1.enqueue(10);
	//	q1.enqueue(20);
// 		q1.enqueue(30);
// 		q1.enqueue(40);
		q1.display();
		q1.dequeue();
		q1.display();
		q1.dequeue();
		q1.display();
	}
}

***********************************************************


Using only REAR


class QueueusingArray{
    int[] queue;
    int size;
    int rear;
    QueueusingArray(int size){
        this.size=size;
        queue=new int[size];
        rear=-1;
    }
    public void enqueue(int val){
     
       if(rear==size-1){
        System.out.println("Queue Overflow");
        return;
        }
            queue[++rear]=val;
    }
    public void dequeue(){
        if(rear==-1){
             System.out.println("Queue Underflow");
            return ;
        }
        for(int i=0;i<rear;i++){
        queue[i]=queue[i+1];}
        rear--;
        
    }
    public void display(){
        if(rear==-1){
            System.out.println("Queue Empty");
            return;
        }
        for(int i=0;i<=rear;i++)
        System.out.print(queue[i]+" ");
        System.out.println();
    }
    
    
}
public class Main
{
	public static void main(String[] args) {
		QueueusingArray q1=new QueueusingArray(5);
		q1.enqueue(10);
// 		q1.enqueue(20);
// 		q1.enqueue(30);
// 		q1.enqueue(40);
		q1.display();
		q1.dequeue();
		q1.display();
	q1.dequeue();
// 		q1.display();
	}
}

